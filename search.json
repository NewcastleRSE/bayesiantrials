[{"path":[]},{"path":[]},{"path":"https://newcastlerse.github.io/bayesiantrials/articles/vignette-01.html","id":"icons-study","dir":"Articles","previous_headings":"","what":"ICONS Study","title":"Bayesian Trials","text":"Set number samples, Define priors. can load ICC estimates directly package icons_icc_data, define joint prior distribution \\(\\rho\\) \\(\\sigma\\) via Gaussian copula Combine priors matrix, Calculate sample size Check assurance sample size","code":"# Number of samples N = 10000 # Minimal clinically important difference delta m_delta = 3.5 # Mean of delta s_delta = 0.9 # Stdev of delta  delta_pr = rnorm(N,m_delta,s_delta)  # Cluster size coefficient of variation m_nu = 0.49    # Mean of nu s_nu = 0.066   # Stdev of nu  nu_pr = rgamma(N,(m_nu^2/s_nu^2),(m_nu/s_nu^2))   # Overall mean effect lambda m_lambda = 1     # Mean of lambda s_lambda = 0.001 # Stdev of lambda  lambda_pr = rnorm(N,m_lambda,s_lambda) # Estimates of intra-cluster correlation rho rho = icons_icc_data  # Standard deviation sigma m_sigma = 8.32 # Mean of standard deviation sigma s_sigma = 1    # Stdev of sigma # Correlation parameter for Gaussian Copula gamma = 0.44  sim <- simulateGaussianCopula(N, rho, m_sigma, s_sigma, gamma)  rho_pr = sim[,1] sigma_pr = sim[,2]  sigmab_pr = sqrt(rho_pr)*sigma_pr sigmaw_pr = sigma_pr*sqrt(1-rho_pr) design = cbind(lambda_pr, delta_pr, nu_pr, sigmab_pr, sigmaw_pr) # Standard value for posterior probability prob = 0.05   # Try with a cluster size of 45 clusterSize = 45  ss = getSampleSize(1:50, design, L = 100, K = 1000, C = clusterSize, target = 0.8, alpha = prob) ss*clusterSize #> [1] 225 getAssurance(ss, design, L = 10, K = 1000, C = clusterSize) #>  5%  #> 0.9 getAssurance(ss, design, L = 100, K = 1000, C = clusterSize) #>   5%  #> 0.79 getAssurance(ss, design, L = 100, K = 1000, C = clusterSize) #>   5%  #> 0.84"},{"path":[]},{"path":"https://newcastlerse.github.io/bayesiantrials/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"package maintainer. Maintainer.","code":""},{"path":"https://newcastlerse.github.io/bayesiantrials/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Ww (2023). bayesiantrials: Package (Title Case). R package version 0.1.0, https://newcastlerse.github.io/bayesiantrials/.","code":"@Manual{,   title = {bayesiantrials: What the Package Does (Title Case)},   author = {Who wrote it},   year = {2023},   note = {R package version 0.1.0},   url = {https://newcastlerse.github.io/bayesiantrials/}, }"},{"path":"https://newcastlerse.github.io/bayesiantrials/index.html","id":"bayesiantrials","dir":"","previous_headings":"","what":"What the Package Does (Title Case)","title":"What the Package Does (Title Case)","text":"R package written accompany Leveraging External Information Clinical Trials short course provided Population Health Sciences Institute Biostatistics Research Group (PHSI-BRG) Newcastle University.","code":""},{"path":"https://newcastlerse.github.io/bayesiantrials/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"What the Package Does (Title Case)","text":"already installed first need manually install Bayesian sampling program JAGS. Please see official JAGS documentation instructions . Next can install latest version package Github using following R commands:","code":"install.packages(\"devtools\") devtools::install_github(\"NewcastleRSE/bayesiantrials\")"},{"path":"https://newcastlerse.github.io/bayesiantrials/reference/Bayes.inf.html","id":null,"dir":"Reference","previous_headings":"","what":"Function for performing Bayesian inference using rjags — Bayes.inf","title":"Function for performing Bayesian inference using rjags — Bayes.inf","text":"Function performing Bayesian inference using rjags","code":""},{"path":"https://newcastlerse.github.io/bayesiantrials/reference/Bayes.inf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function for performing Bayesian inference using rjags — Bayes.inf","text":"","code":"Bayes.inf(tot, y, X, C, cl, K, eps = 0.001)"},{"path":"https://newcastlerse.github.io/bayesiantrials/reference/Bayes.inf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function for performing Bayesian inference using rjags — Bayes.inf","text":"tot Total sample size y Response X Treatment labels C Number clusters cl Cluster label individual K Number MCMC samples eps Analysis Gamma prior parameters","code":""},{"path":"https://newcastlerse.github.io/bayesiantrials/reference/Bayes.inf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function for performing Bayesian inference using rjags — Bayes.inf","text":"MCMC samples","code":""},{"path":"https://newcastlerse.github.io/bayesiantrials/reference/bayesiantrials-package.html","id":null,"dir":"Reference","previous_headings":"","what":"bayesiantrials: What the Package Does (Title Case) — bayesiantrials-package","title":"bayesiantrials: What the Package Does (Title Case) — bayesiantrials-package","text":"(maybe one line) Use four spaces indenting paragraphs within Description.","code":""},{"path":[]},{"path":"https://newcastlerse.github.io/bayesiantrials/reference/getAssurance.html","id":null,"dir":"Reference","previous_headings":"","what":"Function for calculating the assurance — getAssurance","title":"Function for calculating the assurance — getAssurance","text":"Function calculating assurance","code":""},{"path":"https://newcastlerse.github.io/bayesiantrials/reference/getAssurance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function for calculating the assurance — getAssurance","text":"","code":"getAssurance(ss, design, L, K, C, a = 100, eps = 0.001, alpha = 0.05)"},{"path":"https://newcastlerse.github.io/bayesiantrials/reference/getAssurance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function for calculating the assurance — getAssurance","text":"ss Sample size design Design priors L Monte Carlo Samples K MCMC Samples C Number clusters Dirichlet parameter eps Analysis Gamma prior parameters alpha Posterior probability","code":""},{"path":"https://newcastlerse.github.io/bayesiantrials/reference/getAssurance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function for calculating the assurance — getAssurance","text":"Assurance","code":""},{"path":"https://newcastlerse.github.io/bayesiantrials/reference/getMode.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate mode of vector — getMode","title":"Calculate mode of vector — getMode","text":"Calculate mode vector","code":""},{"path":"https://newcastlerse.github.io/bayesiantrials/reference/getMode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate mode of vector — getMode","text":"","code":"getMode(v)"},{"path":"https://newcastlerse.github.io/bayesiantrials/reference/getMode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate mode of vector — getMode","text":"v numeric vector","code":""},{"path":"https://newcastlerse.github.io/bayesiantrials/reference/getMode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate mode of vector — getMode","text":"number","code":""},{"path":"https://newcastlerse.github.io/bayesiantrials/reference/getMode.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate mode of vector — getMode","text":"","code":"getMode(c(1,2,3,2,3,4,2)) #> [1] 2"},{"path":"https://newcastlerse.github.io/bayesiantrials/reference/getSampleSize.html","id":null,"dir":"Reference","previous_headings":"","what":"Function for finding the required sample size — getSampleSize","title":"Function for finding the required sample size — getSampleSize","text":"Function finding required sample size","code":""},{"path":"https://newcastlerse.github.io/bayesiantrials/reference/getSampleSize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function for finding the required sample size — getSampleSize","text":"","code":"getSampleSize(   ss,   design,   L,   K,   C,   target = 0.8,   a = 100,   eps = 0.001,   alpha = 0.05 )"},{"path":"https://newcastlerse.github.io/bayesiantrials/reference/getSampleSize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function for finding the required sample size — getSampleSize","text":"ss Vector sample sizes check design Design priors L Monte Carlo samples K MCMC Samples C Cluster Size target Target assurance Dirichlet parameter eps Analysis Gamma prior parameters alpha Posterior probability","code":""},{"path":"https://newcastlerse.github.io/bayesiantrials/reference/getSampleSize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function for finding the required sample size — getSampleSize","text":"Minimum sample size target assurance. Returns target assurance met sample size ss.","code":""},{"path":"https://newcastlerse.github.io/bayesiantrials/reference/hello.html","id":null,"dir":"Reference","previous_headings":"","what":"Hello, World! — hello","title":"Hello, World! — hello","text":"Prints 'Hello, world!'.","code":""},{"path":"https://newcastlerse.github.io/bayesiantrials/reference/hello.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hello, World! — hello","text":"","code":"hello()"},{"path":"https://newcastlerse.github.io/bayesiantrials/reference/hello.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hello, World! — hello","text":"","code":"hello() #> Error in hello(): could not find function \"hello\""},{"path":"https://newcastlerse.github.io/bayesiantrials/reference/icons_icc_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Identifying Continence OptioNs after Stroke (ICONS) — icons_icc_data","title":"Identifying Continence OptioNs after Stroke (ICONS) — icons_icc_data","text":"Estimates intra-cluster correlation coefficient based feasibility study Thomas (2015).","code":""},{"path":"https://newcastlerse.github.io/bayesiantrials/reference/icons_icc_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identifying Continence OptioNs after Stroke (ICONS) — icons_icc_data","text":"","code":"icons_icc_data"},{"path":"https://newcastlerse.github.io/bayesiantrials/reference/icons_icc_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Identifying Continence OptioNs after Stroke (ICONS) — icons_icc_data","text":"## `icons_icc_data` vector length 10,000","code":""},{"path":"https://newcastlerse.github.io/bayesiantrials/reference/icons_icc_data.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Identifying Continence OptioNs after Stroke (ICONS) — icons_icc_data","text":"Thomas, Lois H, Beverley French, Christopher J Sutton, Denise Forshaw, Michael J Leathley, Christopher R Burton, Brenda Roe, et al. 2015. “Identifying Continence OptioNs Stroke (ICONS): Evidence Synthesis, Case Study Exploratory Cluster Randomised Controlled Trial Introduction Systematic Voiding Programme Patients Urinary Incontinence Stroke Secondary Care.” Programme Grants Applied Research 3 (1).","code":""},{"path":"https://newcastlerse.github.io/bayesiantrials/reference/simulateGaussianCopula.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to simulate from a bivariate Gaussian copula — simulateGaussianCopula","title":"Function to simulate from a bivariate Gaussian copula — simulateGaussianCopula","text":"Function simulate bivariate Gaussian copula","code":""},{"path":"https://newcastlerse.github.io/bayesiantrials/reference/simulateGaussianCopula.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to simulate from a bivariate Gaussian copula — simulateGaussianCopula","text":"","code":"simulateGaussianCopula(N, rho, m_sigma, s_sigma, gamma)"},{"path":"https://newcastlerse.github.io/bayesiantrials/reference/simulateGaussianCopula.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to simulate from a bivariate Gaussian copula — simulateGaussianCopula","text":"N Number samples rho Samples design prior distribution rho m_sigma Mean sigma s_sigma Stdev sigma gamma Correlation parameter","code":""},{"path":"https://newcastlerse.github.io/bayesiantrials/reference/simulateGaussianCopula.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to simulate from a bivariate Gaussian copula — simulateGaussianCopula","text":"Joint prior distribution rho sigma","code":""}]
